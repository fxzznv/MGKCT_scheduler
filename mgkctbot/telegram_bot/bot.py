import logging
import os

from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram import F
from dotenv import load_dotenv

from mgct_schedule.utils.rediss import save_chat_id
from telegram_bot.schedule_extracting import extract_week_schedule, extract_daily_schedule

load_dotenv()
# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = os.getenv("API_TOKEN", "8192247154:AAE2mFLGN__f9kA3IQYyJayZZEzodje_1i8")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–µ–Ω—é
menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å"),
            KeyboardButton(text="üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é")
        ]
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    chat_id = int(message.chat.id)
    save_chat_id(chat_id)
    await message.answer(
        "–¥–∏–Ω–∞—Ö—É",
        reply_markup=menu_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å"
@dp.message(F.text == "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å")
async def schedule_day(message: types.Message):
    day = extract_daily_schedule()
    if day == '':
        await message.answer(text="–í–µ—Ä–Ω—É–ª–æ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—á–µ–º—É-—Ç–æ. –ü–∏–Ω–≥–∞–Ω–∏—Ç–µ @oeeeag")
    else:
        print(day)
        await message.answer(
            text=day,
            parse_mode="HTML"
        )
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é"
@dp.message(F.text == "üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é")
async def schedule_week(message: types.Message):
    week = extract_week_schedule()
    if week == '':
        await message.answer(text="–í–µ—Ä–Ω—É–ª–æ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—á–µ–º—É-—Ç–æ. –ü–∏–Ω–≥–∞–Ω–∏—Ç–µ @oeeeag")
    else:
        print(week)
        await message.answer(
            text=week,
            parse_mode="HTML"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def echo(message: types.Message):
    await message.answer("–±–µ–µ–µ –¥—è–∂–≤—è–≤—Å–∂—Ñ—É–±–π—Ü–¥—É–¥–∂ 654—É654—Ñ—ã–∞–¥–∂–≤—Ñ–≤–±—é, –±—É—Ç–µ—Ä–±—Ä–æ–¥ —Å –¥–µ—Ä–µ–≤–∞ —Å–æ—Ä–≤–∏ –¥–∞ –ø–æ–µ—à—å")

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())